<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>The Journey</title>
    <link rel="stylesheet" href="journal.css">
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>

    <script>
	  document.addEventListener('DOMContentLoaded', function () {
    const form = document.getElementById('journal-entry-form');

    if (form) {
        form.addEventListener('submit', function (event) {
            event.preventDefault();
            alert("Journal Entry Submitted!");

            // Get the values from the form inputs
            const title = document.getElementById('title').value;
            const content = document.getElementById('content').value;

            // Check if local storage is available
            if (typeof (Storage) !== "undefined") {
                // Create an array to store the entries
                let entries = JSON.parse(localStorage.getItem('journal_entries')) || [];

                // Add the new entry to the array
                entries.push({ title, content });

                // Save the updated array to local storage
                localStorage.setItem('journal_entries', JSON.stringify(entries));

                // Clear the form
                // form.reset();
            } else {
                alert('Local storage is not supported in your browser.');
            }
        });
    }
});
	</script> 
</head>
<body>
    <header>
		<h1>Journal</h1>
        <% if (typeof username !== 'undefined') { %>
            <div class="header">
                <img src="/images/noprofilephoto.jpg" alt="Profile Photo" class="profile-photo">
                <div class="username-dropdown">
                    <span class="profile-name"><%= username %></span>
                    <div class="dropdown-content">
                        <p><a href="/user">Profile</a></p>
                        <p><a href="/user">Settings</a></p>
                        <p><a href="/logout">Logout</a></p>
    
                    </div>
                </div>
            </div>
        <% } else { %>
            <div class="header">
            <p><a href="/login">Login</a></p>
            </div>
        <% } %>
    </header>
    <nav>
        <ul>
            <li><a href="/main">Home</a></li> 
            <li><a href="/resources">Resources</a></li>
            <li><a href="/calendar">Calendar</a></li>
            <li><a href="/journal">Journal</a></li>
        </ul>
    </nav>
    <br>
    <div class="float-container">
        <div class="float-right">
            <div id="journal-entry-form">
                <h2 id="form-title">Create a New Journal Entry</h2>
                <br>
                <form action="/journal" method="post" class="new">
                    <br>
                    <label for="title" class="label-heading" id="title">Title:</label>
                    <br>
                    <input type="text" id="title" name="title" required class="form-input">
                    <br>
                    <br>             
                    <div class="form-row">
                        <label for="mood" class="label-heading">Mood:</label>
                        <select id="mood" name="mood" class="form-input" required>
                            <option value="happy">Happy &#128512</option>
                            <option value="sad">Sad &#128546</option>
                            <option value="angry">Angry &#128545</option>
                            <option value="anxious">Anxious &#128547</option>
                            <option value="excited">Excited &#128562</option>
                        </select>
                        
                        <label for="date" class="label-heading">Date:</label>
                        <input type="date" id="date" name="date" class="form-input">
                    </div>
                    <br>
                    <label for="content" class="label-heading">Content:</label> 
                    <br>
                    <br>
                    <div id="editor-container" style="height: 200px;"></div>
                    <br>
                    <input type="hidden" name="content" id="content">
                    <button type="submit">Submit</button>   
                </form>
                <br>
            </div>
        </div>
        <div class="float-left">
            <h2>Your Journal Entries</h2>
            <% if (journalEntries && journalEntries.length > 0) { %>
                <div class="entries-container">
                    <% journalEntries.forEach(entry => { %>
                        <div class="entry">
                            <p>---------------------------------------------------------</p>
                            <h3><%= entry.title %></h3>
                            <p><%- entry.content.substring(0, 20) %>...</p>
                            <p>Mood: <%= entry.mood %> | Date: <%= entry.date.toISOString().split('T')[0] %></p>
                        </div>
                    <% }); %>
                 </div>
            <% } else { %>
                <p>No journal entries found. Start writing today!</p>
            <% } %>
        </div>
    </div>
    <script>
        var quill = new Quill('#editor-container', {
            theme: 'snow', 
            modules: {
                toolbar: [
                    [{ 'font': [] }, { 'size': [] }],
                    ['bold', 'italic', 'underline'],
                    [{ 'color': [] }, { 'background': [] }],
                    [{ 'align': [] }],
                    ['clean']
                ]
            }
        });
    
        const form = document.querySelector('form');
        form.onsubmit = function(event) {
            event.preventDefault();
    
            const contentInput = document.querySelector('input[name=content]');
            contentInput.value = quill.root.innerHTML;
    
            const title = document.querySelector('input[name=title]').value;
            const content = quill.root.innerHTML;
            const mood = document.querySelector('select[name=mood]').value;
            const date = document.querySelector('input[name=date]').value;
    
            const newEntry = {
                title: title,
                content: content,
                mood: mood,
                date: date
            };
    	    
	    
            fetch('/journal', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(newEntry)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    form.reset();
                    quill.root.innerHTML = '';
                    displayEntries();
                } else {
                    console.error('Error saving journal entry:', data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
        };
    

        function displayEntries() {
            fetch('/user-journal') 
            .then(response => response.json())
            .then(entries => {
                const entriesContainer = document.querySelector('.entries-container');
                entriesContainer.innerHTML = '';
				//Sort through the entries based on date, from most recent to oldest
				entries.sort(compareDate);
                const limitedEntries = entries.slice(0, 5);

                if (limitedEntries.length > 0) {
                    limitedEntries.forEach(entry => {
                        const entryDiv = document.createElement('div');
                        entryDiv.classList.add('entry');
						//Create child elements so that the content is appended instead of directly injected
						//This prevents potential XMS injection
						const styleLine = document.createElement('p');
						styleLine.append('---------------------------------------------------------');
						entryDiv.append(styleLine);
                        const title = document.createElement('h3');
						title.append(entry.title);
						entryDiv.appendChild(title);
						const content = document.createElement('p');
						//Since the content is appended using quill.innerHTML
						//Kept to innerHTML, however there are still ways to work around this
						content.innerHTML = entry.content.substring(0, 100);
						const mood = document.createElement('p');
						const date = new Date(entry.date).toISOString().split('T')[0];
						console.log(date);
						const moodText = `Mood: ${entry.mood} | Date: ${date}`;
						mood.append(moodText);
						entryDiv.appendChild(content);
						entryDiv.appendChild(mood);
						//Append everything to the container
                        entriesContainer.appendChild(entryDiv);
                    });
                } else {
                    entriesContainer.innerHTML = '<p>No journal entries found. Start writing today!</p>';
                }
            })
            .catch(error => console.error('Error fetching journal entries:', error));
        };
		//Sorting function
		function compareDate(a, b) {
		  const firstDate = new Date(a.date);
		  const secondDate = new Date(b.date);
		  const result = (a < b) ? 1 : (a > b) ? -1 : 0;
		  return result;
		};

    </script>    
    
</body>
</html>
